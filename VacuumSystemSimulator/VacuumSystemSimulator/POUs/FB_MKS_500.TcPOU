<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_MKS_500" Id="{6ae295b2-a14b-43e3-81a8-5d076111b156}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MKS_500
VAR_INPUT
	stVolume : ST_Volume;
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
	stGauge	:	ST_MKS_500;
END_VAR
VAR
END_VAR
VAR CONSTANT
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
MKS 500 Vacuum gauge

A vacuum gauge takes as input, the pressure of the volume it is attached to,
and produces on its analog output, a corresponding voltage.

A.Pai
3/29/2017
*)

(* Operation 
When the HV on signal is active, the gauge will take a little bit of time to
start an ion current.
*)
stGauge.tonIC.IN	:=	stGauge.i_xHvOn;	
stGauge.tonIC();

stGauge.rPress := stVolume.rPressure; //always this because we assume the gauge is actually physically connected

IF stGauge.q_xGaugeConnected THEN//If gauge is connected
	
	stGauge.q_iRawPress := M_MKS_500(
	i_rPress := stGauge.rPress,
	i_xHVOn	:=	stGauge.i_xHvOn,
	i_xICOn	:=	stGauge.tonIC.Q
	);// gauge on

ELSE//gauge gets disconnected

	stGauge.rPress := 0;
	stGauge.q_iRawPress := 0; // gauge disconnected

END_IF]]></ST>
    </Implementation>
    <Method Name="M_MKS_500" Id="{e4d1ada1-039b-4407-94d8-b7f8c987d67a}">
      <Declaration><![CDATA[METHOD PRIVATE M_MKS_500 : INT
VAR_INPUT
	i_rPress	:	REAL;
	i_xHVOn	:	BOOL;
	i_xICOn	:	BOOL;
END_VAR
VAR
	rVoltage	:	REAL;
END_VAR
VAR CONSTANT
	vBase	:	REAL := 0; //corresponding vbase 0V based on default curve.  See manual pg. 44
	pBase	:	REAL := 1.0E-10; //default curve base pressure is 1E-10. Confusing since can't actually read that low using analog out.
	vSlope	:	REAL := 1.0; //looks correct for default curve
	vNoIC	:	REAL := 0.5;
	vNoHV	:	REAL := 0.1;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
MKS 500 voltage calculation

Does the inverse of the FB 500 from the vacuum library.

A. Wallace, 2016-2-22
*)
IF i_xHVOn and i_xICOn THEN
	rVoltage := MAX(vBase, (vBase + vSlope * LOG(i_rPress/pBase)));
ELSIF i_xHVOn AND NOT i_xICOn THEN
	rVoltage := vNoIC;
ELSE
	rVoltage := vNoHV;
END_IF

M_MKS_500 := REAL_TO_INT( rVoltage * 32767/10 );]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_MKS_500">
      <LineId Id="3" Count="4" />
      <LineId Id="73" Count="1" />
      <LineId Id="9" Count="7" />
      <LineId Id="94" Count="1" />
      <LineId Id="38" Count="1" />
      <LineId Id="70" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="90" Count="3" />
      <LineId Id="45" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="47" Count="1" />
      <LineId Id="72" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_MKS_500.M_MKS_500">
      <LineId Id="36" Count="14" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>