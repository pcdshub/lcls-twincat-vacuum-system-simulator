<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_MKS_903" Id="{e582a674-b22f-4b02-9f19-8dbcc2feec6a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MKS_903
VAR_INPUT
	stVolume : ST_Volume;
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
	stGauge	:	ST_MKS_903;
END_VAR
VAR
	dummy_WaitingForSpark : 	ST_MKS_903 := (rPress := 1E-11);
	dummy_Off		      : 	ST_MKS_903 := (rPress := 1E-4);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
MKS 909 Vacuum gauge

A vacuum gauge takes as input, the pressure of the volume it is attached to,
and produces on its analog output, a corresponding voltage.

A.Pai
3/29/2017
*)

(* Operation 
When the HV on signal is active, the gauge will take a little bit of time to
start an ion current.
*)
stGauge.tonIC.IN	:=	stGauge.i_xHvOn;	
stGauge.tonIC();

IF stGauge.tonIC.Q AND stGauge.q_xGaugeConnected THEN//If gauge is connected and fully on

	(*set gauge real pressure based on chamber real pressure*)
	stGauge.rPress := stVolume.rPressure;
	(*set gauge raw pressure based on transformation of real pressure*)
	stGauge.q_iRawPress := M_MKS_903(stGauge);// gauge on

ELSIF stGauge.i_xHvOn AND stGauge.q_xGaugeConnected THEN//If gauge is connected and starting up

	stGauge.rPress := 0;
	stGauge.q_iRawPress := M_MKS_903(dummy_WaitingForSpark); // gauge on, waiting for spark??

ELSE//gauge gets disconnected

	stGauge.rPress := 0;
	stGauge.q_iRawPress := M_MKS_903(dummy_Off); // gauge not on??

END_IF]]></ST>
    </Implementation>
    <Method Name="M_MKS_903" Id="{6da8ed67-5774-41ff-987a-e6754f6ebe1c}">
      <Declaration><![CDATA[METHOD PRIVATE M_MKS_903 : INT
VAR_INPUT
	stGauge	: ST_MKS_903;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
MKS 903 voltage calculation 

Does the inverse of the FB 903 from the vacuum library

A. Pai, 2017-1-13
*)
IF stGauge.rPress <> 0 THEN
	M_MKS_903 := REAL_TO_INT( (32767/10) * (LOG( stGauge.rPress ) + 11) );
ELSE
	M_MKS_903 := 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_MKS_903">
      <LineId Id="14" Count="5" />
      <LineId Id="67" Count="0" />
      <LineId Id="20" Count="5" />
      <LineId Id="34" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="39" Count="1" />
      <LineId Id="64" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_MKS_903.M_MKS_903">
      <LineId Id="6" Count="10" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>