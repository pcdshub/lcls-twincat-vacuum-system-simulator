<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_MKS_907" Id="{df31f1d7-889f-430b-b098-d006342326eb}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MKS_907
VAR_INPUT
	stVolume : ST_Volume;
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
	stGauge	:	ST_MKS_907;
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
MKS 907 Vacuum gauge

A vacuum gauge takes as input, the pressure of the volume it is attached to,
and produces on its analog output, a corresponding voltage.

A.Pai
3/29/2017
*)

IF stGauge.q_xGaugeConnected THEN//If gauge is connected

	(*set gauge real pressure based on chamber real pressure*)
	stGauge.rPress := stVolume.rPressure;
	(*set gauge raw pressure based on transformation of real pressure*)
	stGauge.q_iRawPress := M_MKS_907(stGauge);// gauge on

ELSE//gauge gets disconnected

	stGauge.rPress := 0;
	stGauge.q_iRawPress := 0; // gauge not on ??

END_IF]]></ST>
    </Implementation>
    <Method Name="M_MKS_907" Id="{ad02aeea-d5fc-4ffc-ba8e-aa90f30de5ea}">
      <Declaration><![CDATA[METHOD PRIVATE M_MKS_907 : INT
VAR_INPUT
	stGauge	: ST_MKS_907;
END_VAR
VAR CONSTANT
	caPvsV	:	ARRAY[1..55,1..2] OF REAL := [
		1.00E-03,0.387,
		2.00E-03,0.397,
		4.00E-03,0.418,
		6.00E-03,0.437,
		8.00E-03,0.456,
		1.00E-02,0.473,
		2.00E-02,0.551,
		3.00E-02,0.619,
		4.00E-02,0.679,
		5.00E-02,0.733,
		6.00E-02,0.783,
		7.00E-02,0.830,
		8.00E-02,0.874,
		9.00E-02,0.915,		
		1.00E-01,0.955,
		2.00E-01,1.271,
		3.00E-01,1.508,
		4.00E-01,1.701,
		5.00E-01,1.864,
		6.00E-01,2.007,
		7.00E-01,2.133,
		8.00E-01,2.246,
		9.00E-01,2.348,		
		1.00E+00,2.442,
		2.00E+00,3.083,
		3.00E+00,3.452,
		4.00E+00,3.698,
		5.00E+00,3.875,
		6.00E+00,4.009,
		7.00E+00,4.114,
		8.00E+00,4.198,
		9.00E+00,4.268,		
		1.00E+01,4.327,
		2.00E+01,4.627,
		2.50E+01,4.695, 
		3.00E+01,4.743,
		4.00E+01,4.805,
		5.00E+01,4.843,
		6.00E+01,4.872,
		7.00E+01,4.891,
		7.50E+01,4.898,
		8.00E+01,4.904,
		9.00E+01,4.914,		
		1.00E+02,4.923,
		2.00E+02,4.987,
		2.50E+02,5.025, 
		3.00E+02,5.071,
		4.00E+02,5.183,
		5.00E+02,5.301,
		6.00E+02,5.397,
		7.00E+02,5.478,
		7.50E+02,5.514,
		8.00E+02,5.548,
		9.00E+02,5.610,
		1.00E+03,5.666
	]; //the conversion table for pressure to analog (super) non-linear voltage

	caPvsVRows	:	UINT	:= 55;
END_VAR
VAR
	rVoltage	:	LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
MKS 907 voltage calculation 

Does the inverse of the FB 907 from the vacuum library

A. Pai, 2017-1-13
*)

IF stGauge.rPress <> 0 THEN

	(* Run the interpolator to get a new value for the analog voltage *)
	stGauge.stIntrpParams.nDataTable_NumberOfRows := 55;
	stGauge.stIntrpParams.pDataTable_ADR	:=	ADR(caPvsV); //we point each time this block gets called to avoid online changes shifting memory around and potentially screwing up this pointer.
	stGauge.stIntrpParams.nDataTable_SIZEOF	:=	SIZEOF(caPvsV);
	stGauge.fbInterpolator.fIn	:=	stGauge.rPress;
	stGauge.fbInterpolator(stParams := stGauge.stIntrpParams, fOut => rVoltage);

	(*Calculate signal based on voltage*)
	M_MKS_907	:= LREAL_TO_INT( rVoltage * 32767/10 );

ELSE
	M_MKS_907 :=0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_MKS_907">
      <LineId Id="14" Count="5" />
      <LineId Id="51" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="27" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="29" Count="1" />
      <LineId Id="50" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_MKS_907.M_MKS_907">
      <LineId Id="6" Count="21" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>